// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace CompanyEmployees.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230613191927_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CompanyId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Address = "583 Wall Dr. Gwynn Oak, MD 21207",
                            Country = "USA",
                            Name = "IT Solutions Ltd"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Address = "312 Forest Avenue, BF 923",
                            Country = "USA",
                            Name = "Admin Solutions Ltd"
                        },
                        new
                        {
                            Id = new Guid("f91d276d-2488-4e68-bf2f-85996f029daf"),
                            Address = "987 Maple Drive, Los Angeles, CA 90210",
                            Country = "USA",
                            Name = "Vector Digital Corp"
                        },
                        new
                        {
                            Id = new Guid("7e9f0f5c-58ef-4a77-913f-3e408054e1bb"),
                            Address = "45 Ocean Street, Sydney, NSW 2000",
                            Country = "Australia",
                            Name = "Oceanic Software Ltd"
                        },
                        new
                        {
                            Id = new Guid("eb23df43-47b3-4675-9b84-2788574e2e95"),
                            Address = "Suite 1, 1 Baker Street, London, W1U 6WG",
                            Country = "UK",
                            Name = "CloudNet Technologies"
                        });
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Age = 26,
                            CompanyId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Name = "Sam Raiden",
                            Position = "Software developer"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Age = 30,
                            CompanyId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Name = "Jana McLeaf",
                            Position = "Software developer"
                        },
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            Age = 35,
                            CompanyId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Kane Miller",
                            Position = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("aee7b7f5-345c-4a46-8aec-0c6c9a6f9b1b"),
                            Age = 32,
                            CompanyId = new Guid("f91d276d-2488-4e68-bf2f-85996f029daf"),
                            Name = "Adam Scott",
                            Position = "Software Developer"
                        },
                        new
                        {
                            Id = new Guid("a5a65b91-b3e6-4f78-a40c-6b72a5a1f827"),
                            Age = 29,
                            CompanyId = new Guid("7e9f0f5c-58ef-4a77-913f-3e408054e1bb"),
                            Name = "Emily Parker",
                            Position = "UI/UX Designer"
                        },
                        new
                        {
                            Id = new Guid("3c4cd4f9-913f-41e1-a9dd-5c8f8b2b6c2a"),
                            Age = 35,
                            CompanyId = new Guid("eb23df43-47b3-4675-9b84-2788574e2e95"),
                            Name = "Oliver Brown",
                            Position = "System Analyst"
                        },
                        new
                        {
                            Id = new Guid("cb4b5c89-35f1-4bb6-b810-66a6f2c6b2db"),
                            Age = 27,
                            CompanyId = new Guid("f91d276d-2488-4e68-bf2f-85996f029daf"),
                            Name = "Sophia Davis",
                            Position = "Data Analyst"
                        },
                        new
                        {
                            Id = new Guid("f0e2058c-8745-4a3a-9fdc-058a4f55a802"),
                            Age = 33,
                            CompanyId = new Guid("7e9f0f5c-58ef-4a77-913f-3e408054e1bb"),
                            Name = "Liam Smith",
                            Position = "IT Support Specialist"
                        });
                });

            modelBuilder.Entity("Entities.Models.Employee", b =>
                {
                    b.HasOne("Entities.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Entities.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
